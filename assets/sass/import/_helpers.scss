// 	----------------------------------------- 
//	Your traditional helper classes through
//	mixins and extends
// 	-----------------------------------------

// eg: @extend %transition;



// Extends

%transition {
	@include transition(all .2s linear); }
%rounded {
	@include border-radius(4px); }
%shadow {
	@include box-shadow(0 1px 3px fade-out($black, 0.8)); }
%left {
	float: left; }
%right {
	float: right; }
// found a lot of times it's nice to be able to just use the hidden class
.hidden {
	display: none; visibility: hidden; }
%screenreaders { 
	border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; }
%centre {
	margin: auto; }
	
%no-outline {
	outline: none; }

// make form elements have no appearance
%input-reset {
	@include appearance(none); }	

%no-list-style {	
	list-style: none; }

// margins and paddings
%margin {
	margin: $base-px 0; }
%em-margin {
	margin: $line 0 $line/2; }
%em-margin-even {
	margin: 0.75em 0; }
%em-margin-reverse {
	margin: $line/2 0 $line; }

%padding {
	padding: $base-px/2 $base-px; }
%em-padding {
	padding: $line 0 $line/4; }
%em-padding-even {
	padding:	 0.75em 0; }
	
%plr {
	padding: 0 $base-px; }
%ptb {
	padding: $base-px 0; }
	
%mlr {
	margin: 0 $base-px; }
%mtb {
	margin: $base-px 0; }

%no-mp {
	margin: 0; padding: 0; }
	
// colour use
%primary {
	color: $primary; }
%secondary {
	color: $secondary; }

// font size
%base {
	@include rem(font-size, 16px); }

// mixins ---------------------- /

// useful from http://remy.bach.me.uk/2011/09/compass-background-image-mixin/
@mixin knockout($_img) {
	@include hide-text;
	display: block;
	background: url($_img) no-repeat;
	height: image-height($_img);
	width: image-width($_img); }
// small mixins
// hyphens for some reason was not in my compass
@mixin hyphens($value: "manual") {
	@each $prefix in -webkit-, -moz-, -o-, "" {
		#{$prefix}hyphens: $value; } }

@mixin wh($width: false, $height: false) {
	$width: unquote($width);
	@if $height != none { 
		$height: unquote($height); }
		
	@if $height != false {
		width: #{$width};
		height: #{$height}; }
	@else {
		width: #{$width};
		height: #{$width}; } }

// user-select for some reason was not in my compass
@mixin user-select($select) {
	$select: unquote($select);
	@include experimental(user-select, $select,
		-moz, -webkit, not -o, not -ms, -khtml, official); }

// stretch for some reason was not in my compass
@mixin stretch($offset-top: 0, $offset-right: 0, $offset-bottom: 0, $offset-left: 0) {
	position: absolute;
	@if $offset-top {
		top: $offset-top; }
	@if $offset-bottom {
		bottom: $offset-bottom; }
	@if $offset-left {
		left: $offset-left; }
	@if $offset-right {
		right: $offset-right; } }


// Color functions taken from: https://github.com/imathis/nice-buttons
// Returns true if the color is brighter than 50% lightness
@function is-bright($color) {
	@return (lightness($color) > 50%); }
	
// Picks the color with the highest contrast
@function if-bright($color, $light: true, $dark: false) {
	@return if(is-bright($color), $light, $dark); }
	
// Picks the color with the highest contrast
@function text-contrast($bg, $dark-text: #666, $light-text: rgba($text-color, .9)) {
	@return if-bright($bg, $dark-text, $light-text); }