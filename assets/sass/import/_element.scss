// Default vars
// ---------------------------
$default-element-main-color: $default !default;
$default-element-text-color: $white !default;
$default-element-dark-bg: $default-dark-bg !default;
$default-element-radius: $radius !default;
$default-element-subtle: false !default;
$default-element-shading: $default-shading !default;
$default-element-size: $default-size !default;
$default-element-set-height: false !default;
$default-element-hover: false !default;
$default-element-font-size: false !default;
$default-element-display: $default-display !default;
$default-element-dry: $default-dry !default;
$default-element-state: $default-state !default;

// Element â€” A base, mixin and options
// Style notices/alerts, buttons, etc 
// -----------------------------------------
@mixin element(
	$main-color	: $default-element-main-color,
	$text-color	: $default-element-text-color,
	$dark-bg		: $default-element-dark-bg,
	$radius			: $default-element-radius, 
	$subtle			: $default-element-subtle,
	$shading		: $default-element-shading,
	$size				: $default-element-size,
	$set-height	: $default-element-set-height, 
	$hover			: $default-element-hover,
	$font-size	: $default-element-font-size,
	$display		: $default-element-display,
	$dry				: $default-element-dry
) {
	
	// Use element-base mixin to keep repetitive stuff together
	@if $dry == false {		
		@include element-base($size, $set-height, $font-size, $text-color, $radius, $display); }
	@else { 
		@extend %element-base-with-mixin; }
	
	@if $subtle {
		.no-cssgradients & {
			background: transparent; } }
	
	// non subtle start		
	@else {
		@if $shading {
			@include element-shading($main-color, normal, $text-color, $dark-bg); }
		@else {
			background: $main-color; } }
			
	@if $hover {
		&:hover, &:focus {
			@if $subtle { 
				color: $text-color; }
			
			@if $shading {
				@include element-shading($main-color, hover, false, $dark-bg); }
			
			@else {
				background: scale-lightness($main-color, 10%); } }
				
		&:active {
			z-index: 2; // makes button above others in a group
			
			@if $shading {
				@include element-shading($main-color, active, false, $dark-bg); }
			
			@else {
				background: scale-lightness($main-color, -10%); } } } }

// Separate the overall button style
// ---------------------------
@mixin element-shading(
	$main-color: $default-element-main-color,
	$state: $default-element-state,
	$text-color: $default-element-text-color,
	$dark-bg: $default-element-dark-bg) {
	
	
	@if $state == hover or $state == active { 
		$main-color: if($state == hover, scale-color($main-color, $lightness: 5%), $main-color); }
	
	$light-color: scale-lightness($main-color, if-bright($main-color, 25%, 15%));
	$dark-color: scale-color($main-color, $lightness: if-bright($main-color, -15%, -25%), $saturation: if(lightness($main-color) > 80, -40%, 0%));
	$shadow-color: scale-lightness($dark-color, if-bright($main-color, -20%, -30%));

	// red
	@if hue($main-color) > 0 and hue($main-color) < 31 {
		$dark-color: scale-lightness(adjust-hue($main-color, -10deg), -20%); }
	
	// orange
	// green
	// blue - red
	@if hue($main-color) > 31 and hue($main-color) < 59 or
			hue($main-color) > 231 and hue($main-color) < 359 {
		
		$dark-color: 
			scale-color(adjust-hue($main-color, -15deg),
				$lightness: if-bright($main-color, -5%, -15%), 
				$saturation: if(lightness($main-color) > 80, -40%, 0%)); }
	
	// green
	// blue
	@if hue($main-color) > 60 and hue($main-color) < 120 {
		
		$dark-color:
			scale-color(adjust-hue($main-color, 15deg), 
				$lightness: if-bright($main-color, -5%, -15%),
				$saturation: if(lightness($main-color) > 80, -40%, 0%)); }
	
	// alternate green/blue
	@if hue($main-color) > 121 and hue($main-color) < 180 {

		$dark-color:
			scale-color(adjust-hue($main-color, 15deg), 
				$lightness: if-bright($main-color, -15%, -25%),
				$saturation: if(lightness($main-color) > 80, -40%, 0%)); }
	
	@if hue($main-color) > 181 and hue($main-color) < 230 {
		$light-color: scale-color($main-color, $lightness: if-bright($main-color, 25%, 45%), $saturation: if-bright($main-color, 0%, -60%));
		$dark-color:
			scale-color(adjust-hue($main-color, 15deg), 
				$lightness: if-bright($main-color, -5%, 0%),
				$saturation: if(lightness($main-color) > 80, -40%, 0%)); }
	
	@if saturation($main-color) < 15 {
		$light-color: scale-lightness($main-color, if-bright($main-color, 40%, 17.5%));
		$dark-color:
			scale-color($main-color,
				$lightness: if-bright($main-color, -7.5%, -30%),
				$saturation: if(lightness($main-color) > 80, -40%, 0%)); }
	
	
	// Apply edits to the button style here
	// ---------------------------
	@if $dark-bg {
		@include background(
			linear-gradient($main-color 0%, $dark-color 100%), $main-color);
		box-shadow:
			inset 0 -1px 1px rgba($shadow-color, .4),
			if($state == active,
				compact(
					inset 0 1px $shadow-color,
					inset 0 1px 3px $shadow-color, 
					0 1px 1px rgba($white, .1)),
				compact(
					inset 0 1px 1px rgba($light-color, .8))),
			if($state == active, 
				compact(false),
				0 2px 2px -1px rgba($black, .3)); }
				
	@else {
		@include background(
			linear-gradient($main-color 0%, $dark-color 100%), $main-color);
		box-shadow:
			inset 0 -1px scale-lightness($shadow-color, -10%),
			inset 0 0 0 1px rgba($shadow-color, .8),
			if($state == active,
				compact(
					inset 0 1px rgba($shadow-color, .4),
					inset 0 1px 3px rgba($shadow-color, .8), 
					0 1px 1px rgba($white, $default-light-shadow)),
				compact(
					inset 0 2px $light-color,
					0 1px 2px rgba($shadow-color, .2))),
			if($state == active, 
				0 1px rgba($white, $default-light-shadow),
				0 2px 3px -2px rgba($shadow-color, $default-dark-shadow)); }
	
	text-shadow: 0 1px 1px rgba($shadow-color, .8);
	
	// modernizr stuff
	.no-boxshadow & {
		border: 1px solid $dark-color; }
	.no-cssgradients & {
		background: $main-color; } }

// Separated stuff that will more often than not be
// consistent so possibility for extending with this mixin
// ---------------------------
@mixin element-base(
	$size: $default-element-size,
	$set-height: $default-element-set-height,
	$font-size: $default-element-font-size,
	$text-color: $default-element-text-color,
	$radius: $default-element-radius,
	$display: $default-element-display) {
	@extend %element-base;
	
	&, &:hover, &:focus { 
		@if $text-color != false {
			color: $text-color; } }
	
	@if $display {
		display: $display; }
	
	@if $size and $set-height == false {
		padding: element-size($size); }
	
	@if $set-height {
		@include set-height($set-height, $line); }
	
	@if $font-size {	
		font-size: $font-size; }
	
	@if $radius {
		border-radius: $radius; } }

// The most consistent stuff for each button
// ---------------------------
%element-base {
	@include transition(none);
	@include user-select(none);
	background-clip: padding-box;
	position: relative;
	font-family: $element;
	line-height: normal;
	border: none;
	font-weight: 700; }

%element-base-with-mixin {
	@extend %element-base;
	@include element-base; }