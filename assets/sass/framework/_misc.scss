// Gradient background default vars
// ---------------------------
$default-gradient-background-main-color: $tertiary !default;
$default-gradient-background-content-height: 600px !default;
$default-gradient-background-shadow: 0 0 3px rgba(scale-lightness($tertiary, -40%), .6) !default;
$default-gradient-background-context: $default-context !default;

// Faded backgrounds with a shadow
// ---------------------------
@mixin gradient-background(
	$main-color			: $default-gradient-background-main-color,
	$content-height	: $default-gradient-background-content-height, 
	$shadow					: $default-gradient-background-shadow,
	$context				: $default-gradient-background-context) {
	
	@if $main-color {
		@include background(linear-gradient(top, rgba($main-color, 1) 20%, rgba($main-color, 0) 100%)); }
	
	background-size: 100% em($content-height, $context);
	background-repeat: no-repeat;
	position: relative;
	z-index: 1;
	
	&:before, &:after {
		content: "";
		position: absolute;
		display: block; }
	&:before {
		z-index: -1;
		left: -3px;
		right: -3px;
		top: 0;
		height: em($content-height, $context);
		@if $main-color {
			@include background(linear-gradient(top, rgba($main-color, 0) 0%, rgba($main-color, 1) 100%)); } }
	&:after {
		z-index:-2;
		top: 0;
		right: 0;
		left: 0;
		height: em($content-height, $context) - 1.5em;
		box-shadow: $shadow; } }

// Triangle default vars
// ---------------------------
$default-triangle-direction: left !default;
$default-triangle-size: 48px !default;
$default-triangle-color: inherit !default;
$default-triangle-context: $default-context !default;

// Triangle
// ---------------------------
%triangle-base {
	@include wh(0);
	display: block;
	position: absolute; }
	
@mixin triangle(
	$direction: $default-triangle-direction,
	$size: $default-triangle-size,
	$color: $default-triangle-color,
	$context: $default-triangle-context) {
	
	$size: em($size) / 2;
	$negative-size: -$size;
	
	@extend %triangle-base;
	
	@if $direction == top {
		border: {
			right: $size solid transparent;
			bottom: $size solid $color;
			left: $size solid transparent; }
		bottom: 100%;
		left: 50%;
		margin-left: $negative-size; }
	@else if $direction == right {
		border: {
			top: $size solid transparent;
			bottom: $size solid transparent;
			left: $size solid $color; }
		left: 100%;
		top: 50%;
		margin-top: $negative-size; }
	@else if $direction == bottom {
		border: {
			top: $size solid $color;
			right: $size solid transparent;
			left: $size solid transparent; }
		top: 100%;
		left: 50%;
		margin-left: $negative-size; }
	@else if $direction == left {
		border: {
			top: $size solid transparent;
			right: $size solid $color;
			bottom: $size solid transparent; }
		right: 100%;
		top: 50%;
		margin-top: $negative-size; } }