@import "variables";

// $attribute-states: disabled, readonly;
// $shaded-states: normal, focus, error, success;

// Shading for text
// Called in _type.scss
// ---------------------------
@mixin form-shading-text(
  $color            : $default-form-color,
  $background-color : $default-form-background-color,
  $state            : $default-form-state,
  $shading          : $default-form-shading
) {
  @if length($background-color) > 1 {
    background-image: linear-gradient(to top, nth($background-color, 1) 0%, nth($background-color, 2) 100%); }
  @else if length($background-color) > 1 {
    background-color: $background-color; }
  
  box-shadow:
    inset 0 1px scale-lightness($color, -10%),
    inset 0 0 0 1px $color,
    if($state != focus, inset 0 1px 2px $color, inset 0 1px 2px desaturate($color, 20%)),
    if($state == focus, 0 0 6px -2px $color, compact(false)); }

// Shading for select
// Called in _type.scss
// ---------------------------
@mixin form-shading-select(
  $color            : $default-form-color,
  $background-color : $default-form-background-color,
  $state            : $default-form-state,
  $shading          : $default-form-shading
) {
  @if length($background-color) > 1 {
    background-image: linear-gradient(to bottom, nth($background-color, 1) 0%, nth($background-color, 2) 100%); }
  @else if length($background-color) > 1 {
    background-color: $background-color; }
    
  @if $shading {        
    @if $state != disabled {
      box-shadow:
        inset 0 -1px scale-lightness($color, -10%),
        inset 0 0 0 1px $color,
        if($state == focus, 0 0 6px -2px $color, compact(false)); }
    
    @else {
      box-shadow:
        0 0 9px -3px rgba($color, .6),
        inset 0 0 0 1px $color,
        inset 0 1px 0 rgba($white, .4); } }
          
  @else {
    box-shadow: inset 0 0 0 1px $color;
    background: $default-form-select-image $background-color; } }

// Shading for radio
// Called in _type.scss
// ---------------------------
@mixin form-shading-checkbox(
  $color            : $default-form-color,
  $background-color : $default-form-background-color,
  $shading          : $default-form-shading
) {
  @if length($background-color) > 1 {
    $background-gradient: linear-gradient(to top, nth($background-color, 1) 0%, nth($background-color, 2) 60%);
    background: $background-gradient; }
  @else if length($background-color) > 1 {
    background-color: $background-color; }
      
  box-shadow: 
    inset 0 0 0 1px $color,
    if($shading, inset 0 2px 1px $white, compact(false));
  
  &:checked {
    background-size: $default-form-checkbox-background-size;
    
    @if length($background-color) > 1 {
      background: $default-form-checkbox-image $background-gradient; }
    @else {
      background: $default-form-checkbox-image $background-color; } } }

// Shading for radio
// Called in _type.scss
// ---------------------------
@mixin form-shading-radio(
  $color            : $default-form-color,
  $background-color : $default-form-background-color,
  $shading          : $default-form-shading
) {
  @if length($background-color) > 1 {
    background-image: linear-gradient(to top, nth($background-color, 1) 0%, nth($background-color, 2) 60%); }
  @else if length($background-color) > 1 {
    background-color: $background-color; }

  box-shadow: 
    inset 0 0 0 1px $color,
    if($shading, inset 0 2px 1px $white, compact(false));

  &:checked {
    background:
      radial-gradient(
        scale-lightness($background-color, -20%) $default-form-radio-radial-gradient-color-stop,
        $background-color $default-form-radio-radial-gradient-color-stop),
      if($shading, linear-gradient(nth($background-color, 1) 0%, nth($background-color, 2) 60%), $background-color); } }