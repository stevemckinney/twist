// Separate the overall button style
// ---------------------------
@import "variables";
$default-element-text-color-light: $white !default;
$default-element-text-color-dark: $neutral !default;
$shading-debug: false !default;

// Some variables are controlled outside of here that affect the style
// this is to keep parameters simplicty as well as being realistic with
// consistency. eg: all buttons will be shaded or have a border.
@mixin element-shading(
  $color   : $default-element-color,
  $state   : $default-element-state,
  $dark-bg : $default-element-dark-bg
) {
  // Style defaults controlled in framework/element/variables
  // ---------------------------
  $border: $default-element-border;
  $shading: $default-element-shading;
  $inner-shadow: $default-element-inner-shadow;
  $highlight: $default-element-highlight;
  $text-light: $default-element-text-color-light;
  $text-dark: $default-element-text-color-dark;

  // Colors
  // ---------------------------
  // Ability to pass in two colours to create a gradient
  $color-1: nth($color, 1);
  $color-2: if(length($color) > 1, nth($color, 2), null);

  @if $state == hover and $color-1 {
    $color-1: scale-color($color-1, $lightness: 10%); }

  @if $state == hover and $color-2 {
    $color-2: scale-color($color-2, $lightness: 10%); }

  // YIQ
  // ---------------------------
  // YIQ applies colours more fitting to the way the eye perceives the brightness.
  // eg: Applying a white highlight on certain colours is more visible than others.
  // it’s important that the colour is applied so it’s much more intentional.
  // Using lightness($color) can be helpful in combination too.
  $yiq-threshold: $default-element-yiq-threshold;
  $yiq-text-threshold: $default-element-yiq-text-threshold;
  $yiq-is-light: yiq-is-light($color-1, $yiq-threshold);

  // However we don’t need YIQ for colours like #f00 we know these are really
  // bright/vibrant colours essentially colours in the top right area of the
  // colour picker. These colours are highly saturated and if their lightness is
  // outside of the range, they tend to be more pastel like, or much darker.
  $saturated: if(saturation($color-1) > 95%, true, false);
  $light: if(lightness($color-1) > 90%, true, false);
  $dark: if(lightness($color-1) < 30%, true, false);

  // Light colors
  // ---------------------------
  $light-color: element-color-adjust($color-1, lighten);
  $highlight-color: element-color-adjust($light-color, lighten);

  // Dark colors
  // ---------------------------
  $border-color: element-color-adjust($color-1, darken);
  $border-dark-color: rgba(scale-color($border-color, $lightness: -20%), .6);

  // State
  // ---------------------------
  @if $state == disabled {
    color: scale-color($color-1, -40%); }

  @else if $state == normal {
    color: yiq-contrast-color($color-1, scale-color($color-1, $lightness: -65%), scale-color($color-1, $lightness: 90%), $yiq-text-threshold); }

  // Background
  // ---------------------------
  @if $color-1 and $color-2 {
    background-image: linear-gradient($color-1, $color-2); }

  @else {
    background-color: $color-1; }

  // Shading styles
  // ---------------------------
  @if $shading {
    // Used for every state except active
    // Applies border and bevels
    $shadow-normal:
      inset 0 -1px 1px $border-dark-color,
      inset 0 0 0 1px $border-color,
      inset 0 2px $highlight-color;

    // Inset shadow to look depressed
    $shadow-active:
      inset 0 1px $border-dark-color,
      inset 0 2px 3px rgba($border-color, .6),
      inset 0 0 0 1px $border-color;

    @if $state != active {
      box-shadow: $shadow-normal; }

    @else {
      box-shadow: $shadow-active; } }

  @else if $border and $shading == false {
    @if $state != active {
      box-shadow:
        inset 0 -1px $border-dark-color,
        inset 0 0 0 1px $border-color; }
    @else {
      box-shadow:
        inset 0 1px $border-dark-color,
        inset 0 0 0 1px $border-color,
        inset 0 if($border, 2px, 1px) 2px $border-color; } }

  @else {
     @if $state == active {
       box-shadow: inset 0 1px 3px $border-color; } } }