// Variables
// ---------------------------
$default-flex-namespace: "flex" !default;
$default-flex-column-namespace: "flex" !default;
$default-flex-columns: 12 !default;
$default-flex-gutter: map-get($default, spacing) * 2 !default;

// Add additional sizes if necessary, highly recommended you change this to be
// tailored to your breakpoints, that match the design.
$default-flex-map: $default-breakpoint-map !default;

// Flex widths
// ---------------------------
@mixin flex-width(
	$flex-columns	: $default-flex-columns,
	$flex-map			: $default-flex-map
) {
	$column-increment: 1;

	@for $column-increment from 1 through $flex-columns {
		#{"." + unquote($default-flex-column-namespace)}-#{$column-increment} {
			$w: (100% / $flex-columns) * $column-increment;
			width: $w;

			#{"." + unquote($default-flex-namespace)}-with-gutter & {
  			width: calc(#{$w} - #{$default-flex-gutter}); } } } }

@mixin flex-width-responsive(
	$flex-columns	: $default-flex-columns,
	$flex-map			: $default-flex-map
) {
	$column-increment: 1;

	@each $breakpoint, $width in $flex-map {
		$class: #{"." + unquote($default-flex-column-namespace)};

		@include breakpoint($width) {
			@for $column-increment from 1 through $flex-columns {
				#{$class}-#{$column-increment}-#{$breakpoint} {
					$w: (100% / $flex-columns) * $column-increment;
					flex: 0 0 $w;

					#{"." + unquote($default-flex-namespace)}-with-gutter & {
      			flex: 0 0 calc(#{$w} - #{$default-flex-gutter}); } } } } } }

// Simple flex using
// display: inline-block
// ---------------------------
@mixin flex(
	$flex-columns	: $default-flex-columns,
	$flex-gutter	: $default-flex-gutter,
	$flex-map			: $default-flex-map
) {
	// Regular widths
	@include flex-width($flex-columns, $flex-map);

	// Make responsive widths
	@include flex-width-responsive($flex-columns, $flex-map); }
